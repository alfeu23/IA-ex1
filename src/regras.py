def add_rules(env):
    """Define the rules for the env"""

    env.build("""
   (defrule recomendar-curso-engenharia
      (declare (salience 50))
      (perfil
         (preferencia_turno ?turno)
         (nota_enem ?ne)
         (areas_interesse $? ?area $?)
         (locais_interesse $? ?campus $?)
         (duracao_preferencia ?dp)
         (tipo_preferencia ?t))
      (perfil-engenharia
         (foco_preferencia ?foco_desejado))
      (curso
         (nome ?n)
         (campus ?campus)
         (duracao ?d)
         (turno ?turno)
         (tipo ?tipo)
         (area "Engenharias")
         (nota_corte ?nc))
      (curso-engenharia
         (nome ?n)
         (foco ?f))
      (test (<= ?nc ?ne))
      (test (<= ?d ?dp))
      (test (eq ?area "Engenharias"))
      (test (eq ?f ?foco_desejado))
      (test (or (eq ?tipo ?t)
                (neq (str-index ?t ?tipo) FALSE)))
      (not (curso-processado ?n))
      =>
      (printout t "======================================" crlf)
      (printout t "CURSO DE ENGENHARIA ENCONTRADO!" crlf)
      (printout t "======================================" crlf)
      (printout t "Nome: " ?n crlf)
      (printout t "Campus: " ?campus crlf)
      (printout t "Área: Engenharias" crlf)
      (printout t "Duração: " ?d " semestres" crlf)
      (printout t "Turno: " ?turno crlf)
      (printout t "Tipo: " ?tipo crlf)
      (printout t "Nota de Corte: " ?nc crlf)
      (printout t "Sua Nota ENEM: " ?ne crlf)
      (printout t "Foco: " ?f crlf)
      (printout t "======================================" crlf)
      (printout t crlf)
      (assert (curso-processado ?n))
      (assert (curso-recomendado ?n)))
   """)

    env.build("""
   (defrule recomendar-curso-geral
      (declare (salience 10))
      (perfil
         (preferencia_turno ?turno)
         (nota_enem ?ne)
         (areas_interesse $? ?area $?)
         (locais_interesse $? ?campus $?)
         (duracao_preferencia ?dp)
         (tipo_preferencia ?t))
      (curso
         (nome ?n)
         (campus ?campus)
         (duracao ?d)
         (turno ?turno)
         (tipo ?tipo)
         (area ?area)
         (nota_corte ?nc))
      (test (<= ?nc ?ne))
      (test (<= ?d ?dp))
      (test (or (eq ?tipo ?t)
                (neq (str-index ?t ?tipo) FALSE)))
      (not (curso-processado ?n))
      (test (neq ?area "Engenharias"))
      =>
      (printout t "======================================" crlf)
      (printout t "CURSO ENCONTRADO!" crlf)
      (printout t "======================================" crlf)
      (printout t "Nome: " ?n crlf)
      (printout t "Campus: " ?campus crlf)
      (printout t "Área: " ?area crlf)
      (printout t "Duração: " ?d " semestres" crlf)
      (printout t "Turno: " ?turno crlf)
      (printout t "Tipo: " ?tipo crlf)
      (printout t "Nota de Corte: " ?nc crlf)
      (printout t "Sua Nota ENEM: " ?ne crlf)
      (printout t "======================================" crlf)
      (printout t crlf)
      (assert (curso-processado ?n))
      (assert (curso-recomendado ?n)))
   """)

    env.build("""
   (defrule filtrar-curso-por-profissao-direta
      (declare (salience 30))
      (curso-recomendado ?curso_nome)
      (perfil-profissional
         (categorias_interesse $? ?categoria $?)
         (setores_interesse $? ?setor $?)
         (salario_minimo_desejado ?sal_min)
         (autonomia_desejada ?autonomia))
      (curso-profissao
         (curso_nome ?curso_nome)
         (profissao_nome ?prof_nome)
         (requisitos_adicionais ?req))
      (profissao
         (nome ?prof_nome)
         (categoria ?categoria)
         (setor ?setor)
         (salario_medio ?sal_med)
         (nivel_autonomia ?autonomia)
         (descricao ?desc))
      (test (>= ?sal_med ?sal_min))
      (not (curso-ideal-processado ?curso_nome))
      =>
      (printout t "******************************************" crlf)
      (printout t "CARREIRA IDEAL BASEADA EM CURSO!" crlf)
      (printout t "******************************************" crlf)
      (printout t "Curso Recomendado: " ?curso_nome crlf)
      (printout t "Profissão Alvo: " ?prof_nome crlf)
      (printout t "Categoria: " ?categoria crlf)
      (printout t "Setor: " ?setor crlf)
      (printout t "Salário Médio: R$ " ?sal_med crlf)
      (printout t "Nível de Autonomia: " ?autonomia crlf)
      (printout t "Requisitos Adicionais: " ?req crlf)
      (printout t "Descrição da Profissão: " ?desc crlf)
      (printout t "******************************************" crlf)
      (printout t crlf)
      (assert (curso-ideal-processado ?curso_nome))
      (assert (curso-ideal ?curso_nome ?prof_nome "direta")))
   """)

    env.build("""
   (defrule filtrar-curso-por-profissao-relacionada
      (declare (salience 20))
      (curso-recomendado ?curso_nome)
      (perfil-profissional
         (categorias_interesse $? ?categoria $?)
         (setores_interesse $? ?setor $?)
         (salario_minimo_desejado ?sal_min)
         (autonomia_desejada ?autonomia))
      (curso-profissao
         (curso_nome ?curso_nome)
         (profissao_nome ?prof_nome)
         (requisitos_adicionais ?req))
      (profissao
         (nome ?prof_nome)
         (categoria ?categoria)
         (setor ?setor)
         (salario_medio ?sal_med)
         (nivel_autonomia ?autonomia)
         (descricao ?desc))
      (test (>= ?sal_med ?sal_min))
      (not (curso-ideal-processado ?curso_nome))
      =>
      (printout t "******************************************" crlf)
      (printout t "CARREIRA RELACIONADA BASEADA EM CURSO!" crlf)
      (printout t "******************************************" crlf)
      (printout t "Curso Recomendado: " ?curso_nome crlf)
      (printout t "Profissão Alvo: " ?prof_nome crlf)
      (printout t "Categoria: " ?categoria crlf)
      (printout t "Setor: " ?setor crlf)
      (printout t "Salário Médio: R$ " ?sal_med crlf)
      (printout t "Nível de Autonomia: " ?autonomia crlf)
      (printout t "Requisitos Adicionais: " ?req crlf)
      (printout t "Descrição da Profissão: " ?desc crlf)
      (printout t "******************************************" crlf)
      (printout t crlf)
      (assert (curso-ideal-processado ?curso_nome))
      (assert (curso-ideal ?curso_nome ?prof_nome "relacionada")))
   """)
